#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

long long winningLotteryTicket(char **tickets, int n) {
    long long maskCount[1024] = {0};
    for (int i = 0; i < n; i++) {
        int mask = 0;
        char *s = tickets[i];
        for (int j = 0; s[j]; j++) {
            if (s[j] < '0' || s[j] > '9') continue;
            mask |= 1 << (s[j] - '0');
            if (mask == 1023) break;
        }
        maskCount[mask]++;
    }
    long long total = 0;
    int fullMask = 1023;
    for (int i = 0; i < 1024; i++) {
        if (maskCount[i] == 0) continue;
        for (int j = i; j < 1024; j++) {
            if (maskCount[j] == 0) continue;
            if ((i | j) == fullMask) {
                if (i == j)
                    total += (maskCount[i] * (maskCount[i] - 1)) / 2;
                else
                    total += maskCount[i] * maskCount[j];
            }
        }
    }
    return total;
}

int main() {
    int n;
    if (scanf("%d", &n) != 1) return 0;
    int c = getchar();
    if (c != '\n' && c != EOF) {}
    const int MAXLEN = 1026;
    char **tickets = (char **)malloc(n * sizeof(char *));
    if (!tickets) return 0;
    for (int i = 0; i < n; i++) {
        tickets[i] = (char *)malloc(MAXLEN);
        if (!tickets[i]) return 0;
        if (!fgets(tickets[i], MAXLEN, stdin)) {
            if (scanf("%s", tickets[i]) != 1) tickets[i][0] = '\0';
        } else {
            size_t L = strlen(tickets[i]);
            if (L > 0 && tickets[i][L-1] == '\n') tickets[i][L-1] = '\0';
            L = strlen(tickets[i]);
            if (L > 0 && tickets[i][L-1] == '\r') tickets[i][L-1] = '\0';
            if (tickets[i][0] == '\0') {
                if (scanf("%s", tickets[i]) != 1) tickets[i][0] = '\0';
            }
        }
    }
    long long result = winningLotteryTicket(tickets, n);
    printf("%lld\n", result);
    for (int i = 0; i < n; i++) free(tickets[i]);
    free(tickets);
    return 0;
}
